(D3EPage StartPage {
    properties [
        (message {
            type ({
                primitive String
            })
            internal true
        })
        (creatable {
            type ({
                model #Creatable
            })
            internal true
        })
        (nonCreatable {
            type ({
                model #NonCreatable
            })
            internal true
        })
        (creatables {
            type ({
                struct #Creatables
            })
            internal true
            computed true
            computation `Query.getCreatables().await`
            synchronise true
        })
        (allCreatables {
            type ({
                model #Creatable
            })
            collection true
            computed true
            computation `creatables.items`
        })
    ]
    build (CRef col {
        component #Column
        data [
            ({
                prop #mainAxisAlignment
                value 'center'
            })
            ({
                prop #vscroll
                value 'true'
            })
        ]
        children [
            (CRef row {
                component #Row
                data [
                    ({
                        prop #mainAxisAlignment
                        value 'center'
                    })
                    ({
                        prop #hscroll
                        value 'true'
                    })
                ]
                children [
                    (CFor cf {
                        var 'item'
                        items `this.allCreatables`
                        type ({
                            model #Creatable
                        })
                        item (CRef id {
                            component #TextView
                            data [
                                ({
                                    prop #data
                                    bind true
                                    bindTo `DisplayUtil.displayCreatable(item)`
                                })
                            ]
                        })
                    })
                ]
            })
            (CRef row {
                component #Row
                data [
                    ({
                        prop #mainAxisAlignment
                        value 'center'
                    })
                    ({
                        prop #hscroll
                        value 'true'
                    })
                ]
                children [
                    (CRef id {
                        component #TextView
                        data [
                            ({
                                prop #data
                                value 'Creatable'
                            })
                        ]
                    })
                    (CRef id {
                        component #TextView
                        data [
                            ({
                                prop #data
                                bind true
                                bindTo `DisplayUtil.displayCreatable(this.creatable)`
                            })
                        ]
                    })
                ]
            })
            (CRef row {
                component #Row
                data [
                    ({
                        prop #mainAxisAlignment
                        value 'center'
                    })
                    ({
                        prop #hscroll
                        value 'true'
                    })
                ]
                children [
                    (CRef id {
                        component #TextView
                        data [
                            ({
                                prop #data
                                value 'NonCreatable'
                            })
                        ]
                    })
                    (CRef id {
                        component #TextView
                        data [
                            ({
                                prop #data
                                bind true
                                bindTo `DisplayUtil.displayNonCreatable(this.nonCreatable)`
                            })
                        ]
                    })
                ]
            })
            (CRef basicC {
                component #Button
                child (CRef id {
                    component #TextView
                    data [
                        ({
                            prop #data
                            value 'Create basic Creatable'
                        })
                    ]
                })
            })
            (CRef cWithRef {
                component #Button
                child (CRef id {
                    component #TextView
                    data [
                        ({
                            prop #data
                            value 'Create Creatable with Ref'
                        })
                    ]
                })
            })
            (CRef cWithRefColl {
                component #Button
                child (CRef id {
                    component #TextView
                    data [
                        ({
                            prop #data
                            value 'Create Creatable with Ref Collection'
                        })
                    ]
                })
            })
            (CRef basicNC {
                component #Button
                child (CRef id {
                    component #TextView
                    data [
                        ({
                            prop #data
                            value 'Create basic NonCreatable'
                        })
                    ]
                })
            })
        ]
    })
    eventHandlers [
        (createBasic {
            type OnEvent
            on #basicC
            event #onPressed
            block ```
                Creatable c = Creatable(
                    name: NameUtil.getName()
                );
                DBResult r = c.save().await;
                if (r.status == Success) {
                    String message = 'Creatable creation success';
                    Creatable fromDb = Query.loadCreatable(c).await;
                    this.message = message;
                    this.creatable = c;
                } else {
                    this.message = 'Creatable creation failed.';
                }
            ```
        })
        (createRef {
            type OnEvent
            on #cWithRef
            event #onPressed
            block ```
                Creatable ref = Creatable(
                    name: NameUtil.getName()
                );
                DBResult r = ref.save().await;
                if (r.status == Success) {
                    this.message = 'Reference creation success.';
                    this.creatable = Query.loadCreatable(ref).await;
                    Creatable c = Creatable(
                        name: NameUtil.getName(),
                        ref: ref
                    );
                    r = c.save().await;
                    if (r.status == Success) {
                        this.message = 'Creatable creation success.';
                        this.creatable = Query.loadCreatable(c).await;
                    } else {
                        this.message = 'Creatable creation failed.';
                    }
                } else {
                    this.message = 'Reference creation failed.';
                }
            ```
        })
        (createRefColl {
            type OnEvent
            on #cWithRefColl
            event #onPressed
            block ```
                Integer i = 3;
                List<Creatable> refs = [];
                for (Integer x = 0; x < 3; x++) {
                    Creatable ref = Creatable(
                        name: NameUtil.getName()
                    );
                    DBResult r = ref.save().await;
                    if (r.status == Success) {
                        this.message = 'Reference creation success.';
                        this.creatable = Query.loadCreatable(ref).await;
                    } else {
                        this.message = 'Reference creation failed.';
                    }
                }
                Creatable c = Creatable(
                    name: NameUtil.getName(),
                    refColl: refs
                );
                DBResult r = c.save().await;
                if (r.status == Success) {
                    this.message = 'Reference creation success.';
                    this.creatable = Query.loadCreatable(c).await;
                } else {
                    this.message = 'Reference creation failed.';
                }
            ```
        })
        (basicNC {
            type OnEvent
            on #basicNC
            event #onPressed
            block ```
                NonCreatable c = NonCreatable();
                DBResult r = c.save().await;
                if (r.status == Success) {
                    String message = 'NonCreatable creation success';
                    this.message = message;
                } else {
                    this.message = 'NonCreatable creation failed.';
                }
            ```
        })
    ]
})